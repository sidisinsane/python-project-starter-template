target-version = "py312"

exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hatch",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pytype",
  ".pytest_cache",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__about__.py",
  "__init__.py",
  "__pycache__",
  "__pypackages__",
  "_build",
  "buck-out",
  "dist",
  "node_modules",
  "venv",
]

[lint]
# @see: https://docs.astral.sh/ruff/rules/
select = [
  "F",   # Pyflakes
  "E",   # pycodestyle errors
  "W",   # pycodestyle warnings
  "I",   # isort
  "D",   # pydocstyle
  "UP",  # pyupgrade
  "B",   # flake8-bugbear
  "C4",  # flake8-comprehensions
  "PT",  # flake8-pytest-style
  "Q",   # flake8-quotes
  "SIM", # flake8-simplify
  "TID", # flake8-tidy-imports
  "TCH", # flake8-type-checking
  "RUF", # Ruff-specific rules
]

ignore = [
  "F401",   # unused-import
  "E501",   # line-too-long: Up PEP 8 limit of 79 chars to default (Black) of 88 chars instead.
  "D100",   # undocumented-public-module: Too restrictive.
  "D101",   # undocumented-public-class: Too restrictive.
  "D102",   # undocumented-public-method: Too restrictive.
  "D103",   # undocumented-public-function: Too restrictive.
  "D104",   # undocumented-public-package: Too restrictive.
  "D105",   # undocumented-magic-method: Too restrictive.
  "D106",   # undocumented-public-nested-class: Too restrictive.
  "D107",   # undocumented-public-init: Too restrictive.
  "PT011",  # pytest-raises-too-broad: Would imply updating tests after each exception message update.
  "SIM102", # collapsible-if: Too restrictive.
]

[lint.pydocstyle]
convention = "pep257" # @see: https://peps.python.org/pep-0257/

[lint.pycodestyle]
max-doc-length = 88 # Use the Black convention.

[lint.flake8-tidy-imports]
ban-relative-imports = "all" # Disallow all relative imports.

[lint.flake8-type-checking]
strict                         = true
runtime-evaluated-base-classes = [ "pydantic.BaseModel" ]
# Pydantic needs to be able to evaluate types at runtime.
# @see https://docs.astral.sh/ruff/settings/#lint_flake8-type-checking_runtime-evaluated-base-classes
# @see https://pypi.org/project/flake8-type-checking/

[lint.per-file-ignores]
"tests/**/*.py" = [
  "D1",
] # undocumented-...: Allow missing docstrings for tests.
